{"version":3,"file":"components-Spinner-component-stories.c5cb01c0.iframe.bundle.js","mappings":";;;AASA;;;;AAMA;AACA;AACA;;;AAKA;;;;;AAKA;AAEA;;AAIA;;AAEA;AACA;;AAEA;AAEA;;;AAGA;;;;ACjCA","sources":["webpack://@mconf/bbb-ui-components-react/./src/components/Spinner/styles.ts","webpack://@mconf/bbb-ui-components-react/./src/components/Spinner/component.tsx"],"sourcesContent":["import styled, { keyframes, css } from 'styled-components';\nimport { StyledWrapperProps, StyledSvgProps, StyledPathProps } from './types';\nimport { colorBrand1 } from '../../stylesheets/pallete';\n\nconst rotate = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst dash = keyframes`\n  0%   { stroke-dasharray: 1, 200; stroke-dashoffset: 0; }\n  50%  { stroke-dasharray: 100, 200; stroke-dashoffset: -15; }\n  100% { stroke-dasharray: 100, 200; stroke-dashoffset: -125; }\n`;\n\nexport const Wrapper = styled.div<StyledWrapperProps>`\n  width: ${({ $size }) => typeof $size === 'number' ? `${$size}px` : $size};\n  height: ${({ $size }) => typeof $size === 'number' ? `${$size}px` : $size};\n  display: inline-grid;\n  place-items: center;\n`;\n\nexport const StyledSvg = styled.svg<StyledSvgProps>`\n  width: 100%;\n  height: 100%;\n  transform-origin: center;\n  overflow: visible;\n  ${({ $animate }) =>\n    $animate && css`\n      animation: ${rotate} 1.4s linear infinite;\n    `}\n`;\n\nexport const Path = styled.circle<StyledPathProps>`\n  fill: none;\n  stroke: ${colorBrand1};\n  stroke-width: ${({ $strokeWidth }) => $strokeWidth}px;\n  stroke-linecap: round;\n  ${({ $animate }) =>\n    $animate && css`\n      animation: ${dash} 1.4s ease-in-out infinite;\n    `}\n\n  ${({ $animate }) =>\n    !$animate && css`\n      stroke-dasharray: 94.2 31.4;\n      stroke-dashoffset: 0;\n    `}\n`;","import React from 'react';\nimport * as Styled from './styles';\nimport { SpinnerProps } from './types';\n\n\n/**\n * A customizable spinner component.\n *\n * This component provides a small, configurable loading indicator for background activity or loading states.\n *\n */\nconst Spinner: React.FC<SpinnerProps> = ({\n  size = 48,\n  strokeWidth = 4,\n  animate = true,\n}) => {\n  return (\n    <Styled.Wrapper $size={size} role=\"progressbar\" aria-label=\"Loading\" aria-busy={animate}>\n      <Styled.StyledSvg viewBox=\"0 0 50 50\" $animate={animate} focusable=\"false\" aria-hidden=\"true\">\n        <Styled.Path\n          className=\"path\"\n          cx=\"25\"\n          cy=\"25\"\n          r=\"20\"\n          $animate={animate}\n          $strokeWidth={strokeWidth}\n        />\n      </Styled.StyledSvg>\n    </Styled.Wrapper>\n  );\n};\n\nexport default Spinner;\n"],"names":[],"sourceRoot":""}