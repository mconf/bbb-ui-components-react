{"version":3,"file":"components-Select-component-stories.5d0a9765.iframe.bundle.js","mappings":";;;;AAUA;;;AAKA;;;;AAIA;;;AAKA;;;AAGA;;;AAGA;AAGA;;AAEA;AACA;;;;AAMA;;;;;AAKA;ACpCA","sources":["webpack://@mconf/bbb-ui-components-react/./src/components/Select/styles.ts","webpack://@mconf/bbb-ui-components-react/./src/components/Select/component.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { borderRadiusSmall, spacingMedium, spacingSmall } from '../../stylesheets/sizing';\nimport Select from '@mui/material/Select';\nimport { colorBorderDefault, colorBrand1, colorDarkGray } from '../../stylesheets/pallete';\nimport { fontSizeSmall } from '../../stylesheets/typography';\n\nexport const SelectContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  gap: ${spacingSmall};\n  justify-content: start;\n  align-items: center;\n`;\n\nexport const SelectWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: ${spacingMedium}; \n  padding: 1px;\n  width: 100%;\n`;\n\nexport const Selector = styled(Select)`\n  height: 3.5rem;\n  flex: 1;\n  border-radius: ${borderRadiusSmall} !important;\n  overflow: hidden;\n  width: 100%;\n  border: 1px solid ${colorBorderDefault};\n`;\n\nexport const Title = styled.label`\n  align-self: flex-start;\n  color: ${colorDarkGray};\n  font-size: ${fontSizeSmall};\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const SelectorIcon = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  color: ${colorBrand1};\n`;\n","import React, { JSX, useId } from 'react';\nimport { MdExpandMore } from 'react-icons/md';\nimport { SelectProps } from './types';\nimport * as Styled from './styles';\n\n/**\n * A customizable Select component.\n *\n * This component provides a styled wrapper around the Material-UI Select and additional styling,\n * such as a title and an optional icon.\n *\n */\nfunction Select({\n  title = null,\n  icon = null,\n  children,\n  ariaLabel,\n  ...props\n}: SelectProps): JSX.Element {\n  const id = useId();\n  const selectId = `select-${id}`;\n  const labelId = title ? `select-label-${id}` : undefined;\n\n  return (\n    <Styled.SelectContainer>\n      {title && <Styled.Title id={labelId} htmlFor={selectId}>{title}</Styled.Title>}\n      <Styled.SelectWrapper>\n        {icon && (\n          <Styled.SelectorIcon>\n            {icon}\n          </Styled.SelectorIcon>\n        )}\n        <Styled.Selector\n          {...props}\n          id={selectId}\n          labelId={labelId}\n          aria-label={ariaLabel}\n          IconComponent={MdExpandMore}\n        >\n          {children}\n        </Styled.Selector>\n      </Styled.SelectWrapper>\n    </Styled.SelectContainer>\n  );\n}\n\nexport default Select;\n"],"names":[],"sourceRoot":""}