{"version":3,"file":"components-Navigation-component-stories.3ed324ad.iframe.bundle.js","mappings":";;;;;;;;;AAcA;;;AAGA;;AAIA;;;;;AAKA;AAGA;;;;AAIA;;AAEA;;;;;;;ACxBA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;;AAIA;AACA;AACA;;AAEA;;AAKA;;;AAGA;AChDA","sources":["webpack://@mconf/bbb-ui-components-react/./src/components/Navigation/styles.ts","webpack://@mconf/bbb-ui-components-react/./src/components/Typography/styles.ts","webpack://@mconf/bbb-ui-components-react/./src/components/Typography/component.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { borderRadiusSmall, spacingMedium } from '../../stylesheets/sizing';\nimport { colorBrand1 } from '../../stylesheets/pallete';\nimport { StyledIconWrapper } from './types';\n\nexport const NavigationButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin: 1px; /* Adds margin to prevent outline from being cropped */\n  border-radius: ${borderRadiusSmall};\n\n  &:focus {\n    outline: 1px solid ${colorBrand1};\n  }\n`;\n\nexport const IconTextWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: ${spacingMedium};\n`;\n\nexport const IconWrapper = styled.div<StyledIconWrapper>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${colorBrand1};\n\n  ${({ $isCustomIcon }) => !$isCustomIcon && css`\n    transform: rotate(90deg);\n    [dir=\"rtl\"] & {\n      transform: rotate(-90deg);\n    }\n  `}\n`;","import styled, { css } from 'styled-components';\nimport { StyledTypography } from './types';\nimport { colorTextDefault, colorTextLight } from '../../stylesheets/pallete';\nimport {\n  fontSizeDefault, fontSizeSmall,\n  fontSizeXSmall, fontWeightDefault,\n  fontWeightHard, fontWeightLight,\n} from '../../stylesheets/typography';\n\nconst variants = {\n  default: css`\n    color: ${colorTextDefault};\n    font-size: ${fontSizeDefault};\n    font-style: normal;\n    font-weight: ${fontWeightLight};\n    line-height: normal;\n  `,\n  selected: css`\n    color: ${colorTextDefault};\n    font-size: ${fontSizeDefault};\n    font-style: normal;\n    font-weight: ${fontWeightHard};\n    line-height: normal;\n  `,\n  text2: css`\n    color: ${colorTextLight};\n    font-size: ${fontSizeSmall};\n    font-style: normal;\n    font-weight: ${fontWeightLight};\n    line-height: normal;\n  `,\n  text3: css`\n    color: ${colorTextLight};\n    font-size: ${fontSizeXSmall};\n    font-style: normal;\n    font-weight: ${fontWeightLight};\n    line-height: normal;\n  `,\n  header: css`\n    color: ${colorTextDefault};\n    font-size: ${fontSizeDefault};\n    font-style: normal;\n    font-weight: ${fontWeightHard};\n    line-height: normal;\n    text-transform: uppercase;\n  `,\n  button: css`\n    color: ${colorTextDefault};\n    font-size: ${fontSizeDefault};\n    font-style: normal;\n    font-weight: ${fontWeightDefault};\n    line-height: normal;\n  `,\n};\n\nexport const TypographyStyled = styled.p<StyledTypography>`\n  margin: 0;\n  padding: 0;\n  ${({ $variant }) => variants[$variant]}\n`;\n","import React from 'react';\nimport { TypographyStyled } from './styles';\nimport { TypographyProps } from './types';\n\n/**\n * A typography component that standardizes text styles across the app.\n *\n * This component provides multiple semantic variants (header, default, label, helper)\n * and allows overriding the rendered HTML element via the `as` prop.\n *\n */\nconst Typography: React.FC<TypographyProps> = ({\n  children,\n  variant = 'default',\n  as,\n  ...props\n}) => {\n  return (\n    <TypographyStyled as={as} $variant={variant} {...props}>\n      {children}\n    </TypographyStyled>\n  );\n};\n\nexport default Typography;\n"],"names":[],"sourceRoot":""}