{"version":3,"file":"components-Toggle-component-stories.1402a1e0.iframe.bundle.js","mappings":";;AAUA;;;AAOA;;;AAIA;AAEA;;AAIA;AAIA;;;;;;AAQA;;;AAGA;;AAOA;AACA;;AAMA;;;AAQA;AACA;AACA;;;;AAMA;AACA;AACA;;;;AAMA","sources":["webpack://@mconf/bbb-ui-components-react/./src/components/Toggle/styles.ts"],"sourcesContent":["import { Switch } from '@mui/material';\nimport { styled as materialStyled } from '@mui/material/styles';\nimport styled, {css} from 'styled-components';\nimport { colorBrand1, colorIconDefault, colorTextDefault, colorTextLight, colorWhite } from '../../stylesheets/pallete';\nimport { TEXT_POSITIONS } from './constants';\nimport { StyledTextWrapperProps, StyledToggleWrapperProps } from './types';\nimport { fontSizeBig, fontSizeDefault } from '../../stylesheets/typography';\n\nexport const ToggleWrapper = styled.div<StyledToggleWrapperProps>`\n  display: flex;\n  ${({ $textPosition }) => {\n    if ($textPosition === TEXT_POSITIONS.TOP || $textPosition === TEXT_POSITIONS.BOTTOM) {\n      return css`\n        flex-direction: column;\n        gap: .1rem;\n      `;\n    }\n    const horizontalStyles = css`\n      flex-direction: row;\n      gap: 1rem;\n    `;\n    if ($textPosition === TEXT_POSITIONS.LEFT) {\n      return css`\n        ${horizontalStyles}\n        justify-content: end; \n      `;\n    }\n    return horizontalStyles;\n  }};\n`;\n\nexport const ToggleSwitchWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: start;\n  justify-content: center;\n  padding: 0.3rem 0px;\n`;\n\nexport const TextWrapper = styled.label<StyledTextWrapperProps>`\n  display: flex;\n  flex-direction: column;\n  order: ${({ $textPosition }) => {\n    if ($textPosition === TEXT_POSITIONS.LEFT || $textPosition === TEXT_POSITIONS.TOP) {\n      return -1;\n    }\n    return 1;\n  }};\n  cursor: pointer;\n  ${({ $hasLabel, $hasHelperText }) => (!$hasLabel || !$hasHelperText) && `justify-content: center;`}\n  ${({ $textPosition }) => {\n    if ($textPosition === TEXT_POSITIONS.TOP || $textPosition === TEXT_POSITIONS.BOTTOM) {\n      return css`\n        align-items: center;\n      `;\n    }\n    if ($textPosition === TEXT_POSITIONS.LEFT) return css`align-items: end;`;\n\n    return css`\n      align-items: start;\n    `;\n  }};\n`;\n\nexport const Title = styled.span`\n  color: ${colorTextDefault};\n  font-size: ${fontSizeBig};\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const HelperText = styled.span`\n  color: ${colorTextLight};\n  font-size: ${fontSizeDefault};\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const MaterialToggle = materialStyled(Switch)(({ theme }) => ({\n  width: '2.3rem',\n  height: '1.2rem',\n  padding: 0,\n  display: 'flex',\n  '&:active': {\n    '& .MuiSwitch-switchBase.Mui-checked': {\n      transform: 'translateX(1.2rem)',\n    },\n  },\n  '& .MuiSwitch-switchBase': {\n    padding: '0.2rem',\n    '&.Mui-checked': {\n      transform: 'translateX(1.2rem)',\n      color: colorWhite,\n      '& + .MuiSwitch-track': {\n        opacity: 1,\n        backgroundColor: colorBrand1,\n        ...theme.applyStyles('dark', {\n          backgroundColor: colorBrand1,\n        }),\n      },\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\n    width: '0.6rem',\n    height: '0.6rem',\n    borderRadius: '0.5rem',\n    transition: theme.transitions.create(['width'], {\n      duration: 200,\n    }),\n    transform: 'translateY(1px)',\n  },\n  '& .MuiSwitch-track': {\n    borderRadius: '0.6rem',\n    opacity: 1,\n    backgroundColor: colorIconDefault,\n    boxSizing: 'border-box',\n    ...theme.applyStyles('dark', {\n      backgroundColor: 'rgba(255,255,255,.35)',\n    }),\n  },\n}));"],"names":[],"sourceRoot":""}