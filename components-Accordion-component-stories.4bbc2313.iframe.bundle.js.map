{"version":3,"file":"components-Accordion-component-stories.4bbc2313.iframe.bundle.js","mappings":";;;;;;;AAYA;;AAEA;;;AAGA;;AAIA;;;;AAIA;AACA;AACA;AAGA;;;;;;;AAOA;;;AAGA;;;AAGA;;;;;;;;AAUA;AACA;;AAEA;;;AAKA;AACA;;;;;ACnDA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;;AAIA;AACA;AACA;;AAEA;;AAKA;;;AAGA;AChDA","sources":["webpack://@mconf/bbb-ui-components-react/./src/components/Accordion/styles.ts","webpack://@mconf/bbb-ui-components-react/./src/components/Typography/styles.ts","webpack://@mconf/bbb-ui-components-react/./src/components/Typography/component.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { colorBackgroundLight, colorBrand1, colorTextDefault, colorWhite } from '../../stylesheets/pallete';\nimport { fontSizeDefault } from '../../stylesheets/typography';\nimport { borderRadiusDefault, spacingMedium, spacingSmall } from '../../stylesheets/sizing';\nimport { StyledAccordionContent, StyledExpandIcon } from './types';\n\nexport const ExpandButton = styled.button`\n  display: flex;\n  align-items: center;\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: ${spacingSmall};\n  background-color: transparent;\n  border-radius: ${borderRadiusDefault};\n\n  &:hover {\n    background: ${colorBackgroundLight};\n  }\n`;\n\nexport const ButtonContent = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: ${spacingSmall};\n  border-radius: ${borderRadiusDefault};\n  gap: ${spacingMedium};\n`;\n\nexport const ExpandIcon = styled.div<StyledExpandIcon>`\n  width: 1.375rem;\n  height: 1.375rem;\n  aspect-ratio: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: ${({ $expanded }) => ($expanded ? 'rotate(180deg)' : 'rotate(0deg)')};\n  transition: all 0.3s ease;\n  border-radius: 50%;\n  background-color: ${colorBrand1};\n\n  svg {\n    color: ${colorWhite};\n    font-size: 1.25rem;\n    transition: transform 0.3s ease;\n  }\n\n  &:hover {\n    filter: brightness(0.9);\n  }\n`;\n\nexport const TitleText = styled.span`\n  font-size: ${fontSizeDefault};\n  font-weight: 400;\n  color: ${colorTextDefault};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const AccordionContent = styled.div<StyledAccordionContent>`\n  max-height: ${({ $expanded, scrollHeight }) =>\n    $expanded ? `${scrollHeight}px` : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease-in-out;\n  padding: 0px 1rem;\n`;\n","import styled, { css } from 'styled-components';\nimport { StyledTypography } from './types';\nimport { colorTextDefault, colorTextLight } from '../../stylesheets/pallete';\nimport {\n  fontSizeDefault, fontSizeSmall,\n  fontSizeXSmall, fontWeightDefault,\n  fontWeightHard, fontWeightLight,\n} from '../../stylesheets/typography';\n\nconst variants = {\n  default: css`\n    color: ${colorTextDefault};\n    font-size: ${fontSizeDefault};\n    font-style: normal;\n    font-weight: ${fontWeightLight};\n    line-height: normal;\n  `,\n  selected: css`\n    color: ${colorTextDefault};\n    font-size: ${fontSizeDefault};\n    font-style: normal;\n    font-weight: ${fontWeightHard};\n    line-height: normal;\n  `,\n  text2: css`\n    color: ${colorTextLight};\n    font-size: ${fontSizeSmall};\n    font-style: normal;\n    font-weight: ${fontWeightLight};\n    line-height: normal;\n  `,\n  text3: css`\n    color: ${colorTextLight};\n    font-size: ${fontSizeXSmall};\n    font-style: normal;\n    font-weight: ${fontWeightLight};\n    line-height: normal;\n  `,\n  header: css`\n    color: ${colorTextDefault};\n    font-size: ${fontSizeDefault};\n    font-style: normal;\n    font-weight: ${fontWeightHard};\n    line-height: normal;\n    text-transform: uppercase;\n  `,\n  button: css`\n    color: ${colorTextDefault};\n    font-size: ${fontSizeDefault};\n    font-style: normal;\n    font-weight: ${fontWeightDefault};\n    line-height: normal;\n  `,\n};\n\nexport const TypographyStyled = styled.p<StyledTypography>`\n  margin: 0;\n  padding: 0;\n  ${({ $variant }) => variants[$variant]}\n`;\n","import React from 'react';\nimport { TypographyStyled } from './styles';\nimport { TypographyProps } from './types';\n\n/**\n * A typography component that standardizes text styles across the app.\n *\n * This component provides multiple semantic variants (header, default, label, helper)\n * and allows overriding the rendered HTML element via the `as` prop.\n *\n */\nconst Typography: React.FC<TypographyProps> = ({\n  children,\n  variant = 'default',\n  as,\n  ...props\n}) => {\n  return (\n    <TypographyStyled as={as} $variant={variant} {...props}>\n      {children}\n    </TypographyStyled>\n  );\n};\n\nexport default Typography;\n"],"names":[],"sourceRoot":""}