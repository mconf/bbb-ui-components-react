{"version":3,"file":"436.33d84d48.iframe.bundle.js","mappings":";;;;;;;;;;;AAiCA;;AAMA;;AAgBA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;;;;AAKA;;AAMA;;;;AAQA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;;;AAMA;;;AAGA;AACA;AACA;;;;;;AAQA;;;;;;;;;AAWA;;;;AAIA;AACA;AAGA;AACA;AASA;AACA;;AAEA;AAYA;AACA;;;AAMA;;;;AAKA;;AAVA;;;;;;;;;AAwBA;;;;AAMA;;;;;;;;;AAWA;AACA;AACA","sources":["webpack://@mconf/bbb-ui-components-react/./src/components/Button/styles.ts"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport {\n  CSS_COLOR_PROPERTIES,\n  CSS_COLOR_PROPERTIES_DISABLED,\n  CSS_SIZE_PROPERTIES,\n  DEFAULT_COLOR,\n  DEFAULT_SIZE,\n  DEFAULT_VARIANT,\n  VARIANTS,\n  LAYOUTS,\n} from './constants';\nimport {\n  StyledHelperIconContainer, StyledButtonProps,\n  StyledButtonWrapperProps,\n} from './type';\nimport {\n  borderRadiusDefault,\n  spacingSmall,\n} from '../../stylesheets/sizing';\nimport { colorBorderDefault, colorTextDefault } from '../../stylesheets/pallete';\nimport { fontSizeSmall } from '../../stylesheets/typography';\n\nconst commonButtonStyles = css<StyledButtonProps>`\n  cursor: pointer;\n  user-select: none;\n  font-weight: 600;\n  line-height: normal;\n  text-align: center;\n  white-space: nowrap;\n  text-transform: none;\n  position: relative;\n  transition: opacity 0.2s ease-in-out;\n\n  ${({ $size }) => {\n    return CSS_SIZE_PROPERTIES[$size]\n      ? `padding: ${CSS_SIZE_PROPERTIES[$size].padding};`\n      : `padding: ${CSS_SIZE_PROPERTIES[DEFAULT_SIZE].padding};`;\n  }}\n\n  ${({ $color, $variant }) => {\n    const safeColor = $color || DEFAULT_COLOR;\n    const safeVariant = $variant || DEFAULT_VARIANT;\n    const {\n      color: contentColor,\n      iconColor,\n      background,\n      border,\n      hoverColor,\n      hoverBackground,\n      hoverBorder,\n      outline,\n    } = CSS_COLOR_PROPERTIES[safeVariant][safeColor];\n\n    return css`\n      & span {\n        color: ${contentColor};\n      }\n      ${iconColor ? `color: ${iconColor}` : `color: ${contentColor}`};\n      ${background && `background-color: ${background};`}\n      ${border ? `border: 1px solid ${border};` : 'border: none;'}\n\n      &&:hover:not(:has(> [data-is-aux-icon]:hover)),\n      &&:active {\n        color: ${hoverColor};\n        ${hoverBackground && `background-color: ${hoverBackground};`}\n        ${hoverBorder ? `border: 1px solid ${hoverBorder};` : 'border: none;'}\n      }\n      &&:focus {\n        border: 1px solid transparent;\n        outline: 2px solid ${outline};\n      }\n    `;\n  }}\n\n  ${({ $variant }) =>\n    $variant === VARIANTS.SUBTLE &&\n    `\n    text-decoration: underline;\n  `}\n\n  ${({ disabled }) => {\n    if (!disabled) return null;\n    const { color, background, border, outline } = CSS_COLOR_PROPERTIES_DISABLED;\n\n    return css`\n      pointer-events: none;\n      cursor: not-allowed;\n      & span {\n        color: ${color};\n      }\n      color: ${color};\n      ${background ? `background-color: ${background}` : `background-color: none`};\n      border: ${border ? `1px solid ${border}` : 'none'};\n\n      &&:hover,\n      &&:active {\n        color: ${color};\n        ${background ? `background-color: ${background}` : `background-color: none`};\n        border: ${border ? `1px solid ${border}` : 'none'};\n      }\n      \n      &&:focus {\n        outline: 2px solid ${outline};\n      }\n    `;\n  }}\n`;\n\nconst stackedLayoutStyles = css`\n  width: 4.5rem;\n  height: 4.5rem;\n  border-radius: ${borderRadiusDefault} !important;\n  border: 1px solid ${colorBorderDefault} !important;\n  padding: ${spacingSmall} !important;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst circleLayoutStyles = css`\n  border-radius: 50%;\n  width: 3rem;\n  height: 3rem;\n  aspect-ratio: 1;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst defaultLayoutStyles = css`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${spacingSmall};\n  border-radius: ${borderRadiusDefault};\n`;\n\nexport const ButtonWrapper = styled.div<StyledButtonWrapperProps>`\n  ${({ $layout }) => $layout === LAYOUTS.STACKED && `\n    width: 5rem;\n    display: flex;\n    flex-direction: column;\n    gap: ${spacingSmall};\n    align-items: center;\n  `}\n`;\n\nexport const Button = styled.button<StyledButtonProps>`\n  ${commonButtonStyles}\n\n  ${({ $layout }) => {\n    switch ($layout) {\n      case LAYOUTS.STACKED:\n        return stackedLayoutStyles;\n      case LAYOUTS.CIRCLE:\n        return circleLayoutStyles;\n      default:\n        return defaultLayoutStyles;\n    }\n  }}\n`;\n\nexport const HelperIconContainer = styled.div<StyledHelperIconContainer>`\n  ${({ $hover, $variant, $color }) => {\n    if (!$hover) return null;\n\n    return css`\n      &&:hover,\n      &&:active {\n        ${CSS_COLOR_PROPERTIES[$variant][$color].hoverBackground &&\n        `background-color: ${CSS_COLOR_PROPERTIES[$variant][$color].hoverBackground};`}\n      }\n\n      &&:focus {\n        outline: 1px solid ${CSS_COLOR_PROPERTIES[$variant][$color].outline};\n      }\n    `;\n  }}\n  border-radius: 50%;\n  padding: 0.2rem;\n  position: absolute;\n  top: 0.1rem;\n  right: 0.1rem;\n  & svg {\n    font-size: 1.25rem;\n  }\n`;\n\nexport const HelperIcon = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n\n  > i {\n    font-size: 2rem;\n  }\n`;\n\nexport const ButtonText = styled.div`\n  color: ${colorTextDefault};\n  font-size: ${fontSizeSmall};\n  width: 100%;\n  text-align: center;\n  line-height: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n"],"names":[],"sourceRoot":""}